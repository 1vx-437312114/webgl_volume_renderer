function initGUI(){gui=new dat.GUI({width:270}),gui.add(params,"autorotate").name("automatic rotation"),gui.add(params,"mip").name("max. intensity proj."),gui.open()}function initGL(a){try{gl=a.getContext("webgl2"),gl.viewportWidth=a.width,gl.viewportHeight=a.height}catch(a){}gl||alert("Your browser does not support WebGL 2 (supported browsers: Chrome 56, Firefox 51, Opera 43)");var b=gl.getExtension("OES_texture_float_linear");if(!b)return void alert("Your browser does not support OES_texture_float_linear");var c=gl.getExtension("EXT_color_buffer_float");if(!c)return void alert("Your browser does not support EXT_color_buffer_float");var d=document.getElementById("container");stats=new Stats,d.appendChild(stats.dom),gl.clearColor(0,0,0,1),gl.enable(gl.DEPTH_TEST),resize(gl),initTransferFunctionTexture(),initTextureFramebuffer(),initShaders(),initBuffers();for(var e=[],f=0;f<64;f++)for(var g=0;g<64;g++){var h=255*(8&f^8&g);e[4*(64*f+g)]=h,e[4*(64*f+g)+1]=h,e[4*(64*f+g)+2]=h,e[4*(64*f+g)+3]=255}testTexture=gl.createTexture(),gl.bindTexture(gl.TEXTURE_2D,testTexture),gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MAG_FILTER,gl.LINEAR),gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MIN_FILTER,gl.LINEAR),gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_S,gl.CLAMP_TO_EDGE),gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_T,gl.CLAMP_TO_EDGE),gl.texImage2D(gl.TEXTURE_2D,0,gl.RGBA,64,64,0,gl.RGBA,gl.UNSIGNED_BYTE,new Uint8Array(e)),gl.bindTexture(gl.TEXTURE_2D,null),createVolumeTexture()}function initTransferFunctionTexture(){var a=new Float32Array([0,0,1,1,.003906,.006406,.998125,1,.007812,.012812,.99625,1,.011719,.019219,.994375,1,.015625,.025625,.9925,1,.019531,.032031,.990625,1,.023438,.038438,.98875,1,.027344,.044844,.986875,1,.03125,.05125,.985,1,.035156,.057656,.983125,1,.039062,.064062,.98125,1,.042969,.070469,.979375,1,.046875,.076875,.9775,1,.050781,.083281,.975625,1,.054688,.089687,.97375,1,.058594,.096094,.971875,1,.0625,.1025,.97,1,.066406,.108906,.968125,1,.070312,.115313,.96625,1,.074219,.121719,.964375,1,.078125,.128125,.9625,1,.082031,.134531,.960625,1,.085938,.140937,.95875,1,.089844,.147344,.956875,1,.09375,.15375,.955,1,.097656,.160156,.953125,1,.101562,.166562,.95125,1,.105469,.172969,.949375,1,.109375,.179375,.9475,1,.113281,.185781,.945625,1,.117188,.192188,.94375,1,.121094,.198594,.941875,1,.125,.205,.94,1,.128906,.211406,.938125,1,.132812,.217812,.93625,1,.136719,.224219,.934375,1,.140625,.230625,.9325,1,.144531,.237031,.930625,1,.148438,.243437,.92875,1,.152344,.249844,.926875,1,.15625,.25625,.925,1,.160156,.262656,.923125,1,.164062,.269062,.92125,1,.167969,.275469,.919375,1,.171875,.281875,.9175,1,.175781,.288281,.915625,1,.179688,.294688,.91375,1,.183594,.301094,.911875,1,.1875,.3075,.91,1,.191406,.313906,.908125,1,.195312,.320312,.90625,1,.199219,.326719,.904375,1,.203125,.333125,.9025,1,.207031,.339531,.900625,1,.210938,.345937,.89875,1,.214844,.352344,.896875,1,.21875,.35875,.895,1,.222656,.365156,.893125,1,.226562,.371563,.89125,1,.230469,.377969,.889375,1,.234375,.384375,.8875,1,.238281,.390781,.885625,1,.242188,.397188,.88375,1,.246094,.403594,.881875,1,.25,.41,.88,1,.246094,.419219,.86625,1,.242188,.428438,.8525,1,.238281,.437656,.83875,1,.234375,.446875,.825,1,.230469,.456094,.81125,1,.226562,.465313,.7975,1,.222656,.474531,.78375,1,.21875,.48375,.77,1,.214844,.492969,.75625,1,.210938,.502187,.7425,1,.207031,.511406,.72875,1,.203125,.520625,.715,1,.199219,.529844,.70125,1,.195312,.539062,.6875,1,.191406,.548281,.67375,1,.1875,.5575,.66,1,.183594,.566719,.64625,1,.179688,.575938,.6325,1,.175781,.585156,.61875,1,.171875,.594375,.605,1,.167969,.603594,.59125,1,.164062,.612813,.5775,1,.160156,.622031,.56375,1,.15625,.63125,.55,1,.152344,.640469,.53625,1,.148438,.649688,.5225,1,.144531,.658906,.50875,1,.140625,.668125,.495,1,.136719,.677344,.48125,1,.132812,.686562,.4675,1,.128906,.695781,.45375,1,.125,.705,.44,1,.121094,.714219,.42625,1,.117188,.723437,.4125,1,.113281,.732656,.39875,1,.109375,.741875,.385,1,.105469,.751094,.37125,1,.101562,.760312,.3575,1,.097656,.769531,.34375,1,.09375,.77875,.33,1,.089844,.787969,.31625,1,.085938,.797188,.3025,1,.082031,.806406,.28875,1,.078125,.815625,.275,1,.074219,.824844,.26125,1,.070312,.834063,.2475,1,.066406,.843281,.23375,1,.0625,.8525,.22,1,.058594,.861719,.20625,1,.054688,.870937,.1925,1,.050781,.880156,.17875,1,.046875,.889375,.165,1,.042969,.898594,.15125,1,.039062,.907812,.1375,1,.035156,.917031,.12375,1,.03125,.92625,.11,1,.027344,.935469,.09625,1,.023438,.944687,.0825,1,.019531,.953906,.06875,1,.015625,.963125,.055,1,.011719,.972344,.04125,1,.007812,.981562,.0275,1,.003906,.990781,.01375,1,0,1,0,1,.015625,1,0,1,.03125,1,0,1,.046875,1,0,1,.0625,1,0,1,.078125,1,0,1,.09375,1,0,1,.109375,1,0,1,.125,1,0,1,.140625,1,0,1,.15625,1,0,1,.171875,1,0,1,.1875,1,0,1,.203125,1,0,1,.21875,1,0,1,.234375,1,0,1,.25,1,0,1,.265625,1,0,1,.28125,1,0,1,.296875,1,0,1,.3125,1,0,1,.328125,1,0,1,.34375,1,0,1,.359375,1,0,1,.375,1,0,1,.390625,1,0,1,.40625,1,0,1,.421875,1,0,1,.4375,1,0,1,.453125,1,0,1,.46875,1,0,1,.484375,1,0,1,.5,1,0,1,.515625,1,0,1,.53125,1,0,1,.546875,1,0,1,.5625,1,0,1,.578125,1,0,1,.59375,1,0,1,.609375,1,0,1,.625,1,0,1,.640625,1,0,1,.65625,1,0,1,.671875,1,0,1,.6875,1,0,1,.703125,1,0,1,.71875,1,0,1,.734375,1,0,1,.75,1,0,1,.765625,1,0,1,.78125,1,0,1,.796875,1,0,1,.8125,1,0,1,.828125,1,0,1,.84375,1,0,1,.859375,1,0,1,.875,1,0,1,.890625,1,0,1,.90625,1,0,1,.921875,1,0,1,.9375,1,0,1,.953125,1,0,1,.96875,1,0,1,.984375,1,0,1,1,1,0,1,.997813,.985625,.004062,1,.995625,.97125,.008125,1,.993438,.956875,.012187,1,.99125,.9425,.01625,1,.989062,.928125,.020312,1,.986875,.91375,.024375,1,.984688,.899375,.028437,1,.9825,.885,.0325,1,.980313,.870625,.036562,1,.978125,.85625,.040625,1,.975937,.841875,.044687,1,.97375,.8275,.04875,1,.971563,.813125,.052812,1,.969375,.79875,.056875,1,.967188,.784375,.060937,1,.965,.77,.065,1,.962812,.755625,.069063,1,.960625,.74125,.073125,1,.958438,.726875,.077187,1,.95625,.7125,.08125,1,.954062,.698125,.085313,1,.951875,.68375,.089375,1,.949687,.669375,.093437,1,.9475,.655,.0975,1,.945312,.640625,.101562,1,.943125,.62625,.105625,1,.940938,.611875,.109687,1,.93875,.5975,.11375,1,.936563,.583125,.117812,1,.934375,.56875,.121875,1,.932187,.554375,.125937,1,.93,.54,.13,1,.927813,.525625,.134062,1,.925625,.51125,.138125,1,.923437,.496875,.142187,1,.92125,.4825,.14625,1,.919062,.468125,.150312,1,.916875,.45375,.154375,1,.914688,.439375,.158437,1,.9125,.425,.1625,1,.910313,.410625,.166562,1,.908125,.39625,.170625,1,.905937,.381875,.174687,1,.90375,.3675,.17875,1,.901563,.353125,.182812,1,.899375,.33875,.186875,1,.897188,.324375,.190937,1,.895,.31,.195,1,.892812,.295625,.199062,1,.890625,.28125,.203125,1,.888438,.266875,.207187,1,.88625,.2525,.21125,1,.884063,.238125,.215312,1,.881875,.22375,.219375,1,.879687,.209375,.223437,1,.8775,.195,.2275,1,.875313,.180625,.231562,1,.873125,.16625,.235625,1,.870938,.151875,.239687,1,.86875,.1375,.24375,1,.866562,.123125,.247812,1,.864375,.10875,.251875,1,.862188,.094375,.255937,1]);transferFunction_texture=gl.createTexture(),gl.bindTexture(gl.TEXTURE_2D,transferFunction_texture),gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_S,gl.REPEAT),gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_T,gl.REPEAT),gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MAG_FILTER,gl.LINEAR),gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MIN_FILTER,gl.LINEAR),gl.texImage2D(gl.TEXTURE_2D,0,gl.RGBA32F,256,1,0,gl.RGBA,gl.FLOAT,a),gl.bindTexture(gl.TEXTURE_2D,null)}function createVolumeTexture(){var b=new XMLHttpRequest;b.open("GET","data/volume.raw",!0),b.responseType="arraybuffer",b.onload=function(a){var b=new Uint8Array(this.response);volume_texture=gl.createTexture(),gl.bindTexture(gl.TEXTURE_3D,volume_texture),gl.texParameteri(gl.TEXTURE_3D,gl.TEXTURE_MAG_FILTER,gl.LINEAR),gl.texParameteri(gl.TEXTURE_3D,gl.TEXTURE_MIN_FILTER,gl.LINEAR),gl.texImage3D(gl.TEXTURE_3D,0,gl.R8,256,256,256,0,gl.RED,gl.UNSIGNED_BYTE,b),run()},b.send()}function initBuffers(){var a=[0,0,0,0,1,0,1,1,0,1,1,0,1,0,0,0,0,0,0,0,1,1,0,1,1,1,1,1,1,1,0,1,1,0,0,1,0,1,0,0,1,1,1,1,1,1,1,1,1,1,0,0,1,0,0,0,0,1,0,0,1,0,1,1,0,1,0,0,1,0,0,0,0,0,0,0,0,1,0,1,1,0,1,1,0,1,0,0,0,0,1,0,0,1,1,0,1,1,1,1,1,1,1,0,1,1,0,0],b=[0,0,0,0,1,0,1,1,0,1,1,0,1,0,0,0,0,0,0,0,1,1,0,1,1,1,1,1,1,1,0,1,1,0,0,1,0,1,0,0,1,1,1,1,1,1,1,1,1,1,0,0,1,0,0,0,0,1,0,0,1,0,1,1,0,1,0,0,1,0,0,0,0,0,0,0,0,1,0,1,1,0,1,1,0,1,0,0,0,0,1,0,0,1,1,0,1,1,1,1,1,1,1,0,1,1,0,0];cubePositionBuffer=gl.createBuffer(),gl.bindBuffer(gl.ARRAY_BUFFER,cubePositionBuffer),gl.bufferData(gl.ARRAY_BUFFER,new Float32Array(a),gl.STATIC_DRAW),cubePositionBuffer.itemSize=3,cubePositionBuffer.numItems=36,cubeColorBuffer=gl.createBuffer(),gl.bindBuffer(gl.ARRAY_BUFFER,cubeColorBuffer),gl.bufferData(gl.ARRAY_BUFFER,new Float32Array(b),gl.STATIC_DRAW),cubeColorBuffer.itemSize=3,cubeColorBuffer.numItems=36;var c=[-1,-1,0,1,-1,0,1,1,0,-1,1,0],d=[0,1,3,3,1,2],e=[0,0,1,0,1,1,0,1];quadPositionBuffer=gl.createBuffer(),gl.bindBuffer(gl.ARRAY_BUFFER,quadPositionBuffer),gl.bufferData(gl.ARRAY_BUFFER,new Float32Array(c),gl.STATIC_DRAW),quadPositionBuffer.itemSize=3,quadPositionBuffer.numItems=12,quadTexCoordsBuffer=gl.createBuffer(),gl.bindBuffer(gl.ARRAY_BUFFER,quadTexCoordsBuffer),gl.bufferData(gl.ARRAY_BUFFER,new Float32Array(e),gl.STATIC_DRAW),quadTexCoordsBuffer.itemSize=2,quadTexCoordsBuffer.numItems=4,quadIndicesBuffer=gl.createBuffer(),gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER,quadIndicesBuffer),gl.bufferData(gl.ELEMENT_ARRAY_BUFFER,new Uint16Array(d),gl.STATIC_DRAW),quadIndicesBuffer.itemSize=1,quadIndicesBuffer.numItems=6,gl.bindBuffer(gl.ARRAY_BUFFER,null),gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER,null)}function initTextureFramebuffer(){framebuffer=gl.createFramebuffer(),gl.bindFramebuffer(gl.FRAMEBUFFER,framebuffer),frontface_buffer=gl.createTexture(),gl.bindTexture(gl.TEXTURE_2D,frontface_buffer),gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MAG_FILTER,gl.LINEAR),gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MIN_FILTER,gl.LINEAR),gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_S,gl.CLAMP_TO_EDGE),gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_T,gl.CLAMP_TO_EDGE),gl.texImage2D(gl.TEXTURE_2D,0,gl.RGBA32F,canvas.width,canvas.height,0,gl.RGBA,gl.FLOAT,null),gl.framebufferTexture2D(gl.FRAMEBUFFER,gl.COLOR_ATTACHMENT0,gl.TEXTURE_2D,frontface_buffer,0),backface_buffer=gl.createTexture(),gl.bindTexture(gl.TEXTURE_2D,backface_buffer),gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MAG_FILTER,gl.LINEAR),gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MIN_FILTER,gl.LINEAR),gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_S,gl.CLAMP_TO_EDGE),gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_T,gl.CLAMP_TO_EDGE),gl.texImage2D(gl.TEXTURE_2D,0,gl.RGBA32F,canvas.width,canvas.height,0,gl.RGBA,gl.FLOAT,null),gl.framebufferTexture2D(gl.FRAMEBUFFER,gl.COLOR_ATTACHMENT0,gl.TEXTURE_2D,backface_buffer,0),final_image=gl.createTexture(),gl.bindTexture(gl.TEXTURE_2D,final_image),gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MAG_FILTER,gl.LINEAR),gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MIN_FILTER,gl.LINEAR),gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_S,gl.CLAMP_TO_EDGE),gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_T,gl.CLAMP_TO_EDGE),gl.texImage2D(gl.TEXTURE_2D,0,gl.RGBA32F,canvas.width,canvas.height,0,gl.RGBA,gl.FLOAT,null),gl.framebufferTexture2D(gl.FRAMEBUFFER,gl.COLOR_ATTACHMENT0,gl.TEXTURE_2D,final_image,0),gl.checkFramebufferStatus(gl.FRAMEBUFFER),gl.bindTexture(gl.TEXTURE_2D,null),gl.bindFramebuffer(gl.FRAMEBUFFER,null)}function getShader(a,b,c){var d;if("fs"===c)d=a.createShader(a.FRAGMENT_SHADER);else{if("vs"!==c)return alert("UNDEFINED!"),null;d=a.createShader(a.VERTEX_SHADER)}return a.shaderSource(d,b),a.compileShader(d),a.getShaderParameter(d,a.COMPILE_STATUS)?d:(alert("SHADER ERROR!"),alert(a.getShaderInfoLog(d)),null)}function initCubeShader(){var a=getShader(gl,cubeVertexShaderStr,"vs"),b=getShader(gl,cubeFragmentShaderStr,"fs");cubeShaderProgram=gl.createProgram(),gl.attachShader(cubeShaderProgram,a),gl.attachShader(cubeShaderProgram,b),gl.linkProgram(cubeShaderProgram),gl.getProgramParameter(cubeShaderProgram,gl.LINK_STATUS)||alert("Could not initialise cube shader!"),cubeShaderProgram.vertexPositionAttribute=gl.getAttribLocation(cubeShaderProgram,"vertex_position"),gl.enableVertexAttribArray(cubeShaderProgram.vertexPositionAttribute),cubeShaderProgram.vertexColorAttribute=gl.getAttribLocation(cubeShaderProgram,"vertex_color"),gl.enableVertexAttribArray(cubeShaderProgram.vertexColorAttribute),cubeShaderProgram.modelViewProjectionMatrixUniform=gl.getUniformLocation(cubeShaderProgram,"modelViewProjectionMatrix")}function initQuadShader(){var a=getShader(gl,quadVertexShaderStr,"vs"),b=getShader(gl,quadFragmentShaderStr,"fs");quadShaderProgram=gl.createProgram(),gl.attachShader(quadShaderProgram,a),gl.attachShader(quadShaderProgram,b),gl.linkProgram(quadShaderProgram),gl.getProgramParameter(quadShaderProgram,gl.LINK_STATUS)||alert("Could not initialise quad shader!"),quadShaderProgram.vertexPositionAttribute=gl.getAttribLocation(quadShaderProgram,"vertex_position"),gl.enableVertexAttribArray(quadShaderProgram.vertexPositionAttribute),quadShaderProgram.vertexTextureCoordAttribute=gl.getAttribLocation(quadShaderProgram,"vertex_textureCoord"),gl.enableVertexAttribArray(quadShaderProgram.vertexTextureCoordAttribute)}function initRaycastingShader(){var a=getShader(gl,rayCastingVertexShaderStr,"vs"),b=getShader(gl,rayCastingFragmentShaderStr,"fs");raycastingShaderProgram=gl.createProgram(),gl.attachShader(raycastingShaderProgram,a),gl.attachShader(raycastingShaderProgram,b),gl.linkProgram(raycastingShaderProgram),gl.getProgramParameter(raycastingShaderProgram,gl.LINK_STATUS)||alert("Could not initialise raycasting shader!"),raycastingShaderProgram.vertexPositionAttribute=gl.getAttribLocation(raycastingShaderProgram,"vertex_position"),gl.enableVertexAttribArray(raycastingShaderProgram.vertexPositionAttribute),raycastingShaderProgram.modelViewProjectionMatrixUniform=gl.getUniformLocation(raycastingShaderProgram,"modelViewProjectionMatrix"),raycastingShaderProgram.step_sizeUniform=gl.getUniformLocation(raycastingShaderProgram,"step_size"),raycastingShaderProgram.frontface_bufferUniform=gl.getUniformLocation(raycastingShaderProgram,"frontface_buffer"),raycastingShaderProgram.backface_bufferUniform=gl.getUniformLocation(raycastingShaderProgram,"backface_buffer"),raycastingShaderProgram.volume_textureUniform=gl.getUniformLocation(raycastingShaderProgram,"volume_texture"),raycastingShaderProgram.trfunc_textureUniform=gl.getUniformLocation(raycastingShaderProgram,"trfunc_texture"),b=getShader(gl,rayCastingMIPFragmentShaderStr,"fs"),raycastingMIPShaderProgram=gl.createProgram(),gl.attachShader(raycastingMIPShaderProgram,a),gl.attachShader(raycastingMIPShaderProgram,b),gl.linkProgram(raycastingMIPShaderProgram),gl.getProgramParameter(raycastingMIPShaderProgram,gl.LINK_STATUS)||alert("Could not initialise raycasting mip shader!"),raycastingMIPShaderProgram.vertexPositionAttribute=gl.getAttribLocation(raycastingMIPShaderProgram,"vertex_position"),gl.enableVertexAttribArray(raycastingMIPShaderProgram.vertexPositionAttribute),raycastingMIPShaderProgram.modelViewProjectionMatrixUniform=gl.getUniformLocation(raycastingMIPShaderProgram,"modelViewProjectionMatrix"),raycastingMIPShaderProgram.step_sizeUniform=gl.getUniformLocation(raycastingMIPShaderProgram,"step_size"),raycastingMIPShaderProgram.frontface_bufferUniform=gl.getUniformLocation(raycastingMIPShaderProgram,"frontface_buffer"),raycastingMIPShaderProgram.backface_bufferUniform=gl.getUniformLocation(raycastingMIPShaderProgram,"backface_buffer"),raycastingMIPShaderProgram.volume_textureUniform=gl.getUniformLocation(raycastingMIPShaderProgram,"volume_texture"),raycastingMIPShaderProgram.trfunc_textureUniform=gl.getUniformLocation(raycastingMIPShaderProgram,"trfunc_texture")}function initShaders(){initCubeShader(),initQuadShader(),initRaycastingShader()}function resize(a){canvas=a.canvas;var b=canvas.clientWidth,c=canvas.clientHeight;canvas.width==b&&canvas.height==c||(canvas.width=b,canvas.height=c,a.viewport(0,0,canvas.width,canvas.height),mat4.perspective(60,canvas.width/canvas.height,.01,400,projectionMatrix))}function draw_cube(){gl.bindBuffer(gl.ARRAY_BUFFER,cubePositionBuffer),gl.vertexAttribPointer(cubeShaderProgram.vertexPositionAttribute,cubePositionBuffer.itemSize,gl.FLOAT,!1,0,0),gl.bindBuffer(gl.ARRAY_BUFFER,cubeColorBuffer),gl.vertexAttribPointer(cubeShaderProgram.vertexColorAttribute,cubeColorBuffer.itemSize,gl.FLOAT,!1,0,0),gl.drawArrays(gl.TRIANGLES,0,cubePositionBuffer.numItems)}function render_frontface(){gl.framebufferTexture2D(gl.FRAMEBUFFER,gl.COLOR_ATTACHMENT0,gl.TEXTURE_2D,frontface_buffer,0),gl.clear(gl.COLOR_BUFFER_BIT|gl.DEPTH_BUFFER_BIT),gl.enable(gl.CULL_FACE),gl.cullFace(gl.BACK),draw_cube(),gl.disable(gl.CULL_FACE)}function render_backface(){gl.framebufferTexture2D(gl.FRAMEBUFFER,gl.COLOR_ATTACHMENT0,gl.TEXTURE_2D,backface_buffer,0),gl.clear(gl.COLOR_BUFFER_BIT|gl.DEPTH_BUFFER_BIT),gl.enable(gl.CULL_FACE),gl.cullFace(gl.FRONT),draw_cube(),gl.disable(gl.CULL_FACE)}function raycasting_pass(){gl.framebufferTexture2D(gl.FRAMEBUFFER,gl.COLOR_ATTACHMENT0,gl.TEXTURE_2D,final_image,0),gl.clear(gl.COLOR_BUFFER_BIT|gl.DEPTH_BUFFER_BIT),gl.useProgram(raycastingShaderProgram),gl.uniformMatrix4fv(raycastingShaderProgram.modelViewProjectionMatrixUniform,!1,modelViewProjectionMatrix),gl.uniform1f(raycastingShaderProgram.step_sizeUniform,step_size),gl.activeTexture(gl.TEXTURE0),gl.bindTexture(gl.TEXTURE_2D,frontface_buffer),gl.uniform1i(raycastingShaderProgram.frontface_bufferUniform,0),gl.activeTexture(gl.TEXTURE1),gl.bindTexture(gl.TEXTURE_2D,backface_buffer),gl.uniform1i(raycastingShaderProgram.backface_bufferUniform,1),gl.activeTexture(gl.TEXTURE2),gl.bindTexture(gl.TEXTURE_3D,volume_texture),gl.uniform1i(raycastingShaderProgram.volume_textureUniform,2),gl.activeTexture(gl.TEXTURE3),gl.bindTexture(gl.TEXTURE_2D,transferFunction_texture),gl.uniform1i(raycastingShaderProgram.trfunc_textureUniform,3),gl.enable(gl.CULL_FACE),gl.cullFace(gl.BACK),draw_cube(),gl.disable(gl.CULL_FACE),gl.useProgram(null),gl.activeTexture(gl.TEXTURE0)}function raycasting_mip_pass(){gl.framebufferTexture2D(gl.FRAMEBUFFER,gl.COLOR_ATTACHMENT0,gl.TEXTURE_2D,final_image,0),gl.clear(gl.COLOR_BUFFER_BIT|gl.DEPTH_BUFFER_BIT),gl.useProgram(raycastingMIPShaderProgram),gl.uniformMatrix4fv(raycastingMIPShaderProgram.modelViewProjectionMatrixUniform,!1,modelViewProjectionMatrix),gl.uniform1f(raycastingMIPShaderProgram.step_sizeUniform,step_size),gl.activeTexture(gl.TEXTURE0),gl.bindTexture(gl.TEXTURE_2D,frontface_buffer),gl.uniform1i(raycastingMIPShaderProgram.frontface_bufferUniform,0),gl.activeTexture(gl.TEXTURE1),gl.bindTexture(gl.TEXTURE_2D,backface_buffer),gl.uniform1i(raycastingMIPShaderProgram.backface_bufferUniform,1),gl.activeTexture(gl.TEXTURE2),gl.bindTexture(gl.TEXTURE_3D,volume_texture),gl.uniform1i(raycastingMIPShaderProgram.volume_textureUniform,2),gl.activeTexture(gl.TEXTURE3),gl.bindTexture(gl.TEXTURE_2D,transferFunction_texture),gl.uniform1i(raycastingMIPShaderProgram.trfunc_textureUniform,3),gl.enable(gl.CULL_FACE),gl.cullFace(gl.BACK),draw_cube(),gl.disable(gl.CULL_FACE),gl.useProgram(null),gl.activeTexture(gl.TEXTURE0)}function render_volume(){resize(gl),gl.useProgram(cubeShaderProgram),gl.bindFramebuffer(gl.FRAMEBUFFER,framebuffer),mat4.identity(modelViewMatrix),mat4.translate(modelViewMatrix,[0,0,-2.25]),mat4.multiply(modelViewMatrix,rotationMatrix),mat4.translate(modelViewMatrix,[-.5,-.5,-.5]),mat4.multiply(projectionMatrix,modelViewMatrix,modelViewProjectionMatrix),gl.uniformMatrix4fv(cubeShaderProgram.modelViewProjectionMatrixUniform,!1,modelViewProjectionMatrix),render_frontface(),render_backface(),params.mip?raycasting_mip_pass():raycasting_pass(),gl.bindFramebuffer(gl.FRAMEBUFFER,null),render_buffer_to_screen()}function render_buffer_to_screen(){gl.clear(gl.COLOR_BUFFER_BIT|gl.DEPTH_BUFFER_BIT),gl.useProgram(quadShaderProgram),gl.bindBuffer(gl.ARRAY_BUFFER,quadPositionBuffer),gl.vertexAttribPointer(quadShaderProgram.vertexPositionAttribute,quadPositionBuffer.itemSize,gl.FLOAT,!1,0,0),gl.bindBuffer(gl.ARRAY_BUFFER,quadTexCoordsBuffer),gl.vertexAttribPointer(quadShaderProgram.vertexTextureCoordAttribute,quadTexCoordsBuffer.itemSize,gl.FLOAT,!1,0,0),gl.activeTexture(gl.TEXTURE0),gl.uniform1i(quadShaderProgram.samplerUniform,0),gl.bindTexture(gl.TEXTURE_2D,final_image),gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER,quadIndicesBuffer),gl.drawElements(gl.TRIANGLES,6,gl.UNSIGNED_SHORT,0),gl.bindBuffer(gl.ARRAY_BUFFER,null),gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER,null),gl.useProgram(null)}function drawScene(){render_volume(),stats.update()}function animate(){if(timeNow=performance.now(),0!=lastTime&&(elapsedTime=(elapsedTime+(timeNow-lastTime))/2,rotationAngleMesh=50*elapsedTime/1e3),lastTime=timeNow,params.autorotate){var a=mat4.create();mat4.identity(a),mat4.rotate(a,degToRad*rotationAngleMesh,[0,1,0]),mat4.multiply(a,rotationMatrix,rotationMatrix)}}function tick(){requestAnimFrame(tick),drawScene(),animate()}function meshChanged(){var a=document.getElementById("mesh_type");a.options[a.selectedIndex]}function colorChanged(){var a=document.getElementById("color_type");a.options[a.selectedIndex]}function shaderChanged(){var a=document.getElementById("shader_type");a.options[a.selectedIndex]}function doKey(a){var b=!0,c=0,d=0;switch(a.keyCode){case 37:c=-2;break;case 39:c=2;break;case 38:d=-2;break;case 40:d=2;break;case 13:c=d=0;break;case 36:c=d=0;break;default:b=!1}if(b){a.preventDefault();var e=mat4.create();mat4.identity(e),mat4.rotate(e,degToRad*c,[0,1,0]),mat4.rotate(e,degToRad*d,[1,0,0]),mat4.multiply(e,rotationMatrix,rotationMatrix),drawScene()}}function handleMouseDown(a){mouseDown=!0,lastMouseX=a.clientX,lastMouseY=a.clientY}function handleMouseUp(a){mouseDown=!1}function handleMouseMove(a){if(mouseDown){var b=a.clientX,c=a.clientY,d=mat4.create();mat4.identity(d);var e=b-lastMouseX;mat4.rotate(d,degToRad*(e/5),[0,1,0]);var f=c-lastMouseY;mat4.rotate(d,degToRad*(f/5),[1,0,0]),mat4.multiply(d,rotationMatrix,rotationMatrix),lastMouseX=b,lastMouseY=c}}function run(){tick()}function webGLStart(){canvas=document.getElementById("webgl_canvas"),canvas.width=window.innerWidth,canvas.height=window.innerHeight,canvas.onmousedown=handleMouseDown,document.onmouseup=handleMouseUp,document.onmousemove=handleMouseMove,document.addEventListener("keydown",doKey,!1),initGUI(),initGL(canvas)}const degToRad=Math.PI/180,CANVAS_WIDTH=1024,CANVAS_HEIGHT=1024;var cubeShaderProgram=0,quadShaderProgram=0,raycastingShaderProgram=0,raycastingMIPShaderProgram=0,renderbuffer=0,framebuffer=0,final_image=0,frontface_buffer=0,backface_buffer=0,cubePositionBuffer=0,cubeColorBuffer=0,quadPositionBuffer=0,quadTexCoordsBuffer=0,quadIndicesBuffer=0,volume_texture=0,modelViewMatrix=mat4.create(),projectionMatrix=mat4.create(),modelViewProjectionMatrix=mat4.create(),rotationMatrix=mat4.create();mat4.identity(rotationMatrix);var showAsWire=!1,lastTime=0,rotationAngleMesh=0,rotation=!0,elapsedTime=0,timeNow=0,timeStart=performance.now(),mouseDown=!1,lastMouseX=null,lastMouseY=null,step_size=1/256,gl,canvas,gui,stats,testTexture=0,cubeVertexShaderStr="#version 300 es\nuniform mat4 modelViewProjectionMatrix;in vec3 vertex_position;in vec3 vertex_color;out vec4 v_color;\nvoid main(void){gl_Position=modelViewProjectionMatrix*vec4(vertex_position,1.0);\nv_color=vec4(vertex_color,1.0);}",cubeFragmentShaderStr="#version 300 es\nprecision mediump float;in vec4 v_color;out vec4 fragColor;\nvoid main(void){fragColor=v_color;}",quadVertexShaderStr="#version 300 es\nuniform mat4 modelViewProjectionMatrix;in vec3 vertex_position;in vec2 vertex_textureCoord;out vec2 texture_coord;\nvoid main(void){gl_Position=vec4(vertex_position,1.0);texture_coord=vertex_textureCoord;}",quadFragmentShaderStr="#version 300 es\nprecision mediump float;precision mediump sampler2D;uniform sampler2D final_image;in vec2 texture_coord;out vec4 fragColor;\nvoid main(void){fragColor=texture(final_image,texture_coord);}",rayCastingVertexShaderStr="#version 300 es\nuniform mat4 modelViewProjectionMatrix;in vec3 vertex_position;out vec4 v_position;\nvoid main(){gl_Position=modelViewProjectionMatrix*vec4(vertex_position,1.0);v_position=gl_Position;}",rayCastingFragmentShaderStr="#version 300 es\nprecision mediump float;precision mediump sampler3D;\n#define NUM_RAY_STEPS 512\nuniform float step_size;uniform sampler2D frontface_buffer;uniform sampler2D backface_buffer;uniform sampler3D volume_texture;\nuniform sampler2D trfunc_texture;in vec4 v_position;out vec4 fragColor;\nvoid main(){vec2 textureCoord=(v_position.xy/v_position.w+1.0)/2.0;vec4 back_position=texture(backface_buffer,textureCoord);\nvec4 front_position=texture(frontface_buffer,textureCoord);vec3 ray_origin=front_position.xyz;\nvec3 ray_dir = back_position.xyz-ray_origin;float ray_len=length(ray_dir);vec3 delta_dir=normalize(ray_dir)*step_size;\nfloat delta_dir_len = length(delta_dir);vec4 col_acc=vec4(0.0,0.0,0.0,0.0);float alpha_acc=0.0;float length_acc=0.0;\nvec3 ray_pos=ray_origin;for(int i=0;i<NUM_RAY_STEPS;i++){float density=texture(volume_texture,ray_pos).r;vec4 color_sample;\ncolor_sample=texture(trfunc_texture,vec2(density,0.5));float alpha_sample=density*step_size;\ncol_acc+=(1.0-alpha_acc)*color_sample*alpha_sample*40.0;alpha_acc+=alpha_sample;length_acc+=delta_dir_len;ray_pos+=delta_dir;\nif(length_acc>=ray_len||alpha_acc>1.0)break;}fragColor=col_acc;}",rayCastingMIPFragmentShaderStr="#version 300 es\nprecision mediump float;precision mediump sampler3D;\n#define NUM_RAY_STEPS 512\nuniform float step_size;uniform sampler2D frontface_buffer;uniform sampler2D backface_buffer;uniform sampler3D volume_texture;\nuniform sampler2D trfunc_texture;in vec4 v_position;out vec4 fragColor;void main(){\nvec2 textureCoord=(v_position.xy/v_position.w+1.0)/2.0;vec4 back_position=texture(backface_buffer, textureCoord);\nvec4 front_position=texture(frontface_buffer, textureCoord);vec3 ray_origin=front_position.xyz;\nvec3 ray_dir=back_position.xyz-ray_origin;float ray_len=length(ray_dir);vec3 delta_dir=normalize(ray_dir)*step_size;\nfloat delta_dir_len=length(delta_dir);float alpha_acc=0.0;float length_acc=0.0;vec3 ray_pos=ray_origin;float max_val=0.0;\nfor(int i=0;i<NUM_RAY_STEPS;i++){float density = texture(volume_texture,ray_pos).r;float alpha_sample=density*step_size;\nalpha_acc+=alpha_sample;max_val=max(max_val,density);length_acc+=delta_dir_len;ray_pos+=delta_dir;\nif(length_acc>=ray_len||alpha_acc>1.0)break;}fragColor=texture(trfunc_texture,vec2(max_val,0.5));}",params={autorotate:!0,mip:!1};
